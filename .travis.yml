language: node_js
node_js:
  - 12

services:
  - docker

# Pre-testing installs
install:
  - echo "nothing needs to be installed"

# Scripts to be run such as tests
before_script:
  - echo "no tests"

script:
  # Create .env file and write enviroments
  - touch .env
  - echo $POSTGRES_USERNAME >> .env
  - echo $POSTGRES_PASSWORD >> .env
  - echo $POSTGRES_HOST >> .env
  - echo $POSTGRES_DB >> .env
  - echo $AWS_BUCKET >> .env
  - echo $AWS_REGION >> .env
  - echo $AWS_PROFILE >> .env
  - echo $JWT_SECRET >> .env
  - echo $URL >> .env
  - cat .env
  # print the version for logging
  - docker --version
  # build containers
  - docker-compose -f docker-compose-build.yaml build --parallel
  # - docker build -t udagram-api-user ./udagram-api-user
  # - docker build -t udagram-api-feed ./udagram-api-feed
  # - docker build -t reverseproxy ./udagram-reverseproxy
  # - docker build -t udagram-frontend ./udagram-frontend
  # tag containers
  - docker tag udagram-api-user uchitavietnam/udagram-api-user:latest
  - docker tag udagram-api-feed uchitavietnam/udagram-api-feed:latest
  - docker tag reverseproxy uchitavietnam/reverseproxy:latest
  - docker tag udagram-frontend uchitavietnam/udagram-frontend:latest

# Tasks to perform after the process is successful. Formatting the Docker username and password as below enables you to programmatically log in without having the password exposed in logs.
after_success:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push uchitavietnam/udagram-api-user
  - docker push uchitavietnam/udagram-api-feed
  - docker push uchitavietnam/reverseproxy
  - docker push uchitavietnam/udagram-frontend